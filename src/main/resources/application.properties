# Configuração desta Aplicação
app.kafka.producer.topic=${APP_KAFKA_PRODUCER_TOPIC:configure-me-producer-topic}
app.kafka.consumer.topics=${APP_KAFKA_CONSUMER_TOPICS:configures-me-consumer-topics}

app.kafka.dlt.retry.topics=4
app.kafka.dlt.retry.topics.pattern=reservar-estoque-retry-[0-9]+
app.kafka.dlt.retry.topic.first=reservar-estoque-retry-1
app.kafka.dlt.topic=reservar-estoque-dlt

# Exceções recuperáveis
app.kafka.dlt.excecoes.recuperaveis[0]=java.net.ConnectException
app.kafka.dlt.excecoes.recuperaveis[1]=java.net.UnknownHostException

# Exceções não-recuperáveis
app.kafka.dlt.excecoes.naoRecuperaveis[0]=org.apache.avro.AvroMissingFieldException
app.kafka.dlt.excecoes.naoRecuperaveis[1]=java.lang.NullPointerException

# Para provocar atraso no processmento de retentativa
app.kafka.dlt.retry.max.wait.ms=20000
app.kafka.dlt.retry.min.bytes=52428800

# Actuator stuff
## CIDR allowed to hit actuator
management.address=127.0.0.1 
 
## Whether security should be enabled or disabled altogether
management.security.enabled=false

## Endpoints to expose
management.endpoints.web.exposure.include=prometheus,health,info

spring.kafka.listener.missing-topics-fatal=${KAFKA_FAIL_WHEN_MISSING_TOPICS:false}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:configure-me-kafka.hi:9092}
spring.kafka.properties.schema.registry.url=${SCHEMA_REGISTRY_URL:http://configure-me-schema-registry.hi}

spring.kafka.consumer.client-id=${KAFKA_CLIENT_ID:configure-me-client-id}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:configure-me-group-id}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.specific.avro.reader=true

spring.kafka.producer.client-id=${KAFKA_CLIENT_ID:configure-me-client-id}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.acks=1
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.properties.auto.register.schemas=true
